{\rtf1\ansi\ansicpg1251\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 Charter-Roman;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red31\green31\blue31;\red255\green255\blue255;\red239\green239\blue239;
}
{\*\expandedcolortbl;;\cssrgb\c16078\c16078\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c94902\c94902\c94902;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl720\partightenfactor0

\f0\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What\'92s the Subscriber?\
\pard\pardeftab720\sl640\partightenfactor0

\f1\fs42 \cf2 It is responsible for requesting data and accepting the data and possible failures provided by a publisher. There are subscribers built-in to Combine:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\partightenfactor0
\ls1\ilvl0
\f2\fs31\fsmilli15750 \cf2 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f3\b \cf0 \cb1 Assign
\f1\b0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0applies values passed down from the publisher to an object defined by a `keypath`.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\b\fs32 \cf2 \cb4 	.
\f2\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 assign\cf2 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (to: \\
\f3\b .
\f2\b0 isEnabled, on: continueButton)\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\partightenfactor0
\ls2\ilvl0
\fs31\fsmilli15750 \cf2 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}
\f3\b \cf0 \cb1 Sink
\f1\b0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0accepts a closure that receives any resulting values from the publisher.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\b\fs32 \cf2 \cb4 	.
\f2\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 sink\cf2 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  \{ results 
\f3\b in
\f2\b0 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb4     	//Do the logic to the results\cb1 \
\cb4 	\}\
\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\partightenfactor0
\ls3\ilvl0
\fs31\fsmilli15750 \cf2 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 onReceive(publisher)
\f1\fs42 \cb3 \'a0function to use views as a subscriber it can manipulate\'a0
\f2\fs31\fsmilli15750 \cb4 @State
\f1\fs42 \cb3 \'a0or\'a0
\f2\fs31\fsmilli15750 \cb4 @Bindings
\f1\fs42 \cb3 \'a0within SwiftUI.\
\pard\tx560\pardeftab720\sl640\partightenfactor0
\cf2 \cb1 \
\pard\pardeftab720\sl360\partightenfactor0

\f3\b\fs32 \cf2 \cb4 	struct
\f2\b0  
\f3\b CustomView
\f2\b0  : 
\f3\b View
\f2\b0  \{\cb1 \

\f3\b \cb4 	@State
\f2\b0  
\f3\b private
\f2\b0  
\f3\b var
\f2\b0  currentStatus 
\f3\b =
\f2\b0  "enabled"\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb4     	
\f3\b var
\f2\b0  body: some 
\f3\b View
\f2\b0  \{\cb1 \
\cb4         	
\f3\b Text
\f2\b0 ("Current status: \\(currentStatus)")\cb1 \
\cb4         		
\f3\b .onReceive
\f2\b0 (MyPublisher
\f3\b .
\f2\b0 currentStatusPublisher) \{ \cb1 \
\cb4                 	
\f3\b self.
\f2\b0 currentStatusValue 
\f3\b =
\f2\b0  $0\cb1 \
\cb4             	\}\cb1 \
\cb4     	\}\cb1 \
\cb4 	\}\cb1 \
}