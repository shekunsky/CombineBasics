{\rtf1\ansi\ansicpg1251\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 Charter-Roman;\f2\fnil\fcharset0 Charter-Bold;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red31\green31\blue31;\red255\green255\blue255;\red239\green239\blue239;
}
{\*\expandedcolortbl;;\cssrgb\c16078\c16078\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c94902\c94902\c94902;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl720\partightenfactor0

\f0\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What\'92s the Subjects?\
\pard\pardeftab720\sl640\partightenfactor0

\f1\fs42 \cf2 It is a publisher that you can use to \'94
\f2\b inject
\f1\b0 \'94 values into a stream, by calling its\'a0
\f3\fs31\fsmilli15750 \cb4 send(_:)
\f1\fs42 \cb3 \'a0method. This can be useful for adapting existing imperative code to the Combine model.\
Both\'a0
\f4\b\fs31\fsmilli15750 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 CurrentValueSubject
\f1\b0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0and\'a0
\f4\b\fs31\fsmilli15750 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 PassthroughSubject
\f1\b0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0are also useful for creating publishers for objects conforming to\'a0
\f4\b\fs31\fsmilli15750 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 ObservableObject
\f1\b0\fs42 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 . This protocol is supported by a number of declarative components within SwiftUI.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use a\'a0
\f3\fs31\fsmilli15750 \cb4 CurrentValueSubject
\f1\fs42 \cb3 \'a0a subject that wraps a single value and publishes a new element whenever the value changes by calling\'a0
\f3\fs31\fsmilli15750 \cb4 send(_:)
\f1\fs42 \cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use a\'a0
\f3\fs31\fsmilli15750 \cb4 PassthroughSubject
\f1\fs42 \cb3 \'a0a subject that broadcasts elements to downstream subscribers and it unlike CurrentValueSubject doesn\'92t have an initial value or a buffer of the most recently-published elements.\cb1 \
}